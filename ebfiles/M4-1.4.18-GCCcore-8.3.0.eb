# Built with EasyBuild version 4.2.0 on 2020-04-20_00-59-21
easyblock = 'ConfigureMake'

name = 'M4'
version = '1.4.18'

homepage = 'http://www.gnu.org/software/m4/m4.html'
description = """GNU M4 is an implementation of the traditional Unix macro processor. It is mostly SVR4 compatible
  although it has some extensions (for example, handling more than 9 positional parameters to macros).
 GNU M4 also has built-in functions for including files, running shell commands, doing arithmetic, etc."""

toolchain = {'name': 'GCCcore', 'version': '8.3.0'}

source_urls = [GNU_SOURCE]
sources = [SOURCELOWER_TAR_GZ]

patches = ['M4-1.4.18_glibc_2.28.patch']
checksums = [
    'ab2633921a5cd38e48797bf5521ad259bdc4b979078034a3b790d7fec5493fab',  # m4-1.4.18.tar.gz
    'a613c18f00b1a3caa46ae4b8b849a0f4f71095ad860f4fcd6c6bb4ae211681fa',  # M4-1.4.18_glibc_2.28.patch
]

# use same binutils version that was used when building GCC toolchain
# builddependencies = [('binutils', '2.32', '', True)]
osdependencies = ['binutils']

# '-fgnu89-inline' is required to avoid linking errors with older glibc's,
# see https://github.com/easybuilders/easybuild-easyconfigs/issues/529
configopts = "--enable-c++ CPPFLAGS=-fgnu89-inline"

sanity_check_paths = {
    'files': ['bin/m4'],
    'dirs': [],
}

moduleclass = 'devel'

# Build statistics
buildstats = [{
    "build_time": 47.0,
    "command_line": ["--buildpath='/fuyun/build'", "--containerpath='/fuyun/containers'", '--info', "--installpath='/fuyun'", "--packagepath='/fuyun/packages'", "--prefix='/fuyun'", "--repositorypath='/fuyun/ebfiles_repo'", "--robot='/fuyun/software/EasyBuild/4.2.0/easybuild/easyconfigs'", "--sourcepath='/fuyun/sources'", '--use-existing-modules', 'gompi-2019b.eb'],
    "core_count": 40,
    "cpu_arch_name": "UNKNOWN",
    "cpu_model": "Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz",
    "cpu_speed": 3000.0,
    "cpu_vendor": "Intel",
    "easybuild-easyblocks_version": "4.2.0",
    "easybuild-framework_version": "4.2.0",
    "gcc_version": "Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/fuyun/software/GCCcore/8.3.0/libexec/gcc/x86_64-pc-linux-gnu/8.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --enable-languages=c,c++,fortran --enable-lto --enable-checking=release --disable-multilib --enable-shared=yes --enable-static=yes --enable-threads=posix --enable-plugins --enable-gold=default --enable-ld --with-plugin-ld=ld.gold --prefix=/fuyun/software/GCCcore/8.3.0 --with-local-prefix=/fuyun/software/GCCcore/8.3.0 --enable-bootstrap --with-isl=/fuyun/build/GCCcore/8.3.0/system-system/gcc-8.3.0/stage2_stuff; Thread model: posix; gcc version 8.3.0 (GCC) ; ",
    "glibc_version": "2.28",
    "hostname": "buildkitsandbox",
    "install_size": 552482,
    "modules_tool": ('Lmod', '/fuyun/software/lmod/lmod/libexec/lmod', '8.3.8'),
    "os_name": "centos linux",
    "os_type": "Linux",
    "os_version": "8.1.1911",
    "platform_name": "x86_64-unknown-linux",
    "python_version": "3.6.8 (default, Nov 21 2019, 19:31:34) ; [GCC 8.3.1 20190507 (Red Hat 8.3.1-4)]",
    "system_gcc_path": "/fuyun/software/GCCcore/8.3.0/bin/gcc",
    "system_python_path": None,
    "timestamp": 1587344361,
    "total_memory": 64342,
}]
