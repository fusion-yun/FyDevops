easyblock = 'ConfigureMake'

name = 'imas'

local_dd = '3.24.0'
local_al = '4.2.0'
version = local_dd+'_'+local_al
local_installer_version = '1.8.2'

local_javashortver = '1.8'
local_javaver = '1.8.0_231'
local_pyver = '3.6.6'


homepage = 'https://confluence.iter.org/display/IMP'

description = "Integrated Modelling & Analysis Suite (IMAS) AL=" + \
    local_al+"  DD=" + local_dd+" installer="+local_installer_version

toolchain = {'version': '2018b', 'name': 'foss'}
toolchainopts = {'pic': True}

sources = [{
    'filename': 'installer-'+local_installer_version+'.tar.gz',
    'git_config': {
        'url': 'ssh://git@git.iter.org/imas',
        'repo_name': 'installer',
        'tag': local_installer_version,
    }
}, {
    'filename': 'access_layer-'+local_al+'.tar.gz',
    'git_config': {
        'url': 'ssh://git@git.iter.org/imas',
        'repo_name': 'access-layer',
        'tag': local_al,
    },
},
    {
    'filename': 'data-dictionary-'+local_dd+'.tar.gz',
    'git_config': {
        'url': 'ssh://git@git.iter.org/imas',
        'repo_name': 'data-dictionary',
        'tag': local_dd,
    },
}
]

checksums = []


builddependencies = [
    ('UDA', '2.2.6'),
    ('Blitz++', '1.0.2'),
    ('Python', local_pyver),
    ('Boost', '1.68.0', '-Python-3.6.6', toolchain),
    ('Java', local_javaver, '', True),

    ('Saxon-HE', '9.9.1.5', '-Java-'+local_javashortver,  True),
    ('libxslt', '1.1.32'),
    ('HDF5', '1.10.2'),
    ('netCDF', '4.6.1'),
    ('MDSplus', '7.84.8'),


]

configure_cmd = """cat > %(builddir)s/installer/Makefile.fuyun <<EOF
## Site configuration Makefile for ITER Organization's HPC Cluster

# This file should be maintained by the administrator of the site.
# Users should modify Makefile.config for their personal overrides.

# Toggle what language interfaces are (not) built by default
# Use ?= notation to allow user override from command line.
IMAS_CPP ?= yes
IMAS_FORTRAN ?= yes
IMAS_GFORTRAN ?= yes # FORTRAN compiler
IMAS_IFORT ?= no # FORTRAN compiler
IMAS_G95 ?= no # FORTRAN compiler
IMAS_NAGFOR ?= no # FORTRAN compiler
IMAS_PGI ?= no # FORTRAN compiler
IMAS_JAVA ?= yes
IMAS_MATLAB ?= no
IMAS_PYTHON ?= yes
IMAS_PYTHON2 ?= no
IMAS_PYTHON3 ?= yes

# Build with MDSplus backend
IMAS_MDSPLUS ?= yes
# Build with HDF5 backend
IMAS_HDF5 ?= no # Broken

# Build with UDA backend
IMAS_UDA ?= yes

# Include \\n to have pretty linebreaks in the modulefile.
MODULEFILE_DEPENDENCIES={\\n\\
    GCC/7.3.0    GCC/7.3.0 \\n\\
    Java         Java/%(javaver)s \\n\\
    Python       Python/%(pyver)s-%(toolchain_name)s-%(toolchain_version)s  \\n\\
    UDA          UDA/2.6.2-%(toolchain_name)s-%(toolchain_version)s \\n\\
    MDSplus      MDSplus/7.84.8-%(toolchain_name)s-%(toolchain_version)s \\n\\
    Blitz++      Blitz++/1.0.0-GCCcore-7.3.0 \\n\\
}

# Test for this jar file in the CLASSPATH:
SAXONJARFILE=saxon9he.jar

# Test for this pc file in the PKG_CONFIG_PATH, leave empty to skip test:
BLITZPCFILE=blitz.pc

# Test that these module names are loaded for UAL compilation (compile time):
UAL_MODULES = Blitz++
# Additionally test for these module names in case of IMAS_PGI=yes IMAS_IFORT=yes,.. see below.
UAL_MODULES_MDSPLUS = MDSplus
UAL_MODULES_UDA = UDA
UAL_MODULES_G95 = 
UAL_MODULES_NAGFOR = 
UAL_MODULES_PGI = 
UAL_MODULES_INTEL =
UAL_MODULES_JAVA = Java
UAL_MODULES_PYTHON2 = 
UAL_MODULES_PYTHON3 = Python

# Additional search path to local IMAS scripts that is added to \$PATH by imas module
IMAS_EXTRA_PATH = \$(IMAS_HOME)/extra/bin
IMAS_EXTRA_MATLABPATH = \$(IMAS_HOME)/extra/matlab
IMAS_EXTRA_PYTHONPATH = \$(IMAS_HOME)/core/pyual:\$(IMAS_HOME)/extra/bin

EOF
"""

prefix_opt = " echo  "
configopts = " "

local_prefix = """
ln -s %(builddir)s/data-dictionary %(builddir)s/access-layer/xml &&
cd %(builddir)s/installer &&
GIT_OFFLINE=y   \
SITECONFIG=%(builddir)s/installer/Makefile.fuyun   \
IMAS_HOME=%(installdir)s \
BUILD_AL=%(builddir)s/access-layer   \
BUILD_DD=%(builddir)s/access-layer/xml  \
INSTALL_DIR=%(installdir)s  \
INSTALL_MOD_DIR=%(installdir)s/../../../modules/all \
"""

local_prefix = local_prefix + " TAG_DD=" + local_dd + "  TAG_AL="+local_al


parallel = 1
build_cmd = local_prefix+"  make  "
buildopts = ' dd ual  '

install_cmd = local_prefix+" make "
installopts = " dd_install  ual_install module_install"

sanity_check_paths = {
    'files': ['include/IDSDef.xml',
              'include/IDSNames.txt'],
    'dirs': ['share/doc/imas'],
}

moduleclass = 'data'
