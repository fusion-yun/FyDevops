--- CMakeLists.txt.orig	2019-10-24 09:44:03.904000000 +0800
+++ CMakeLists.txt	2019-10-24 09:55:40.368767816 +0800
@@ -22,21 +22,22 @@
 ########################################################################################################################
 # Version and Machine information
 
-include( GetGitRevisionDescription )
+IF( NOT DEFINED GIT_VERSION)
+  include( GetGitRevisionDescription )
 
-git_describe( GIT_TAG --tags )
+  git_describe( GIT_TAG --tags )
 
-if( "${GIT_TAG}" MATCHES "^.*NOTFOUND$" )
-  message( "Failed to get git revision: ${GIT_TAG}" )
-  set( GIT_TAG "0.0.0" )
-endif()
-
-# Strip off the SHA1 tag element if it exists
-string( REGEX REPLACE "^([0-9]+\\.[0-9]+\\.[0-9]+).*" "\\1" GIT_VERSION "${GIT_TAG}" )
-if( NOT "${GIT_VERSION}" MATCHES "[0-9]+\\.[0-9]+\\.[0-9]+" )
-  message( WARNING "invalid git tag for version parsing: ${GIT_VERSION}" )
-  set( GIT_VERSION "0.0.0" )
-endif()
+  if( "${GIT_TAG}" MATCHES "^.*NOTFOUND$" )
+    message( "Failed to get git revision: ${GIT_TAG}" )
+    set( GIT_TAG "0.0.0" )
+  endif()
+  # Strip off the SHA1 tag element if it exists
+  string( REGEX REPLACE "^([0-9]+\\.[0-9]+\\.[0-9]+).*" "\\1" GIT_VERSION "${GIT_TAG}" )
+  if( NOT "${GIT_VERSION}" MATCHES "[0-9]+\\.[0-9]+\\.[0-9]+" )
+    message( WARNING "invalid git tag for version parsing: ${GIT_VERSION}" )
+    set( GIT_VERSION "0.0.0" )
+  endif()
+ENDIF()
 
 project( uda VERSION ${GIT_VERSION} )
 
